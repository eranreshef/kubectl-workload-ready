name: Release

on:
  push:
    tags:
      - 'v*'
#    branches:
#      - 'master'

jobs:
  create_release:
    runs-on: ubuntu-16.04
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  build:
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, macos-10.15]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --max-complexity=10 --max-line-length=80 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pytest tests.py


    - name: install python-dev
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get install -y python3-dev
    - name: Create executable
      run: |
        pip install pyinstaller
        pyinstaller --onefile --distpath dist/${{ runner.os }} kubectl-workload_ready
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: dist/${{ runner.os }}/kubectl-workload_ready
        asset_name: kubectl-workload_ready_${{ runner.os }}
        asset_content_type: application/bin
